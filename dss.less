/*
 LESS DSS (dynamic stylesheet) 1.6.5 (for less.js 1.3.0+)
 MORE INFO: http://cl.ly/Dqnr

 LESS mixins by Chris Krupski
*/


/* CSS Backgrounds
========================== */

.gradient-h (@startColor: #EEE, @endColor: #FFF) {
  background-color: @endColor;
  background-image: -webkit-gradient(linear, left top, left bottom, from(@startColor), to(@endColor));
  background-image: -webkit-linear-gradient(top, @startColor, @endColor);
  background-image: -moz-linear-gradient(top, @startColor, @endColor);
  background-image: -o-linear-gradient(top, @startColor, @endColor);
  background-image: -ms-linear-gradient(top, @startColor, @endColor); /* IE 10+ */
  background-image: linear-gradient(top, @startColor, @endColor);
  background-repeat: repeat-x;
  filter: e(%("progid:DXImageTransform.Microsoft.gradient(GradientType=0, StartColorStr='%d', EndColorStr='%d')", @startColor, @endColor));
}

.gradient-hline (@startColor: #B0BAC5, @middleColor1: #9DA7B2, @middleColor2: #919CA8, @endColor: #7E8A98) {
  background: @endColor;
  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0%, @startColor), color-stop(50%, @middleColor1), color-stop(51%, @middleColor2), color-stop(100%, @endColor));
  background-image: -webkit-linear-gradient(top, @startColor 0%, @middleColor1 50%, @middleColor2 51%, @endColor 100%);
  background-image: -moz-linear-gradient(top, @startColor 0%, @middleColor1 50%, @middleColor2 51%, @endColor 100%);
  background-image: -o-linear-gradient(top, @startColor 0%, @middleColor1 50%, @middleColor2 51%, @endColor 100%);
  background-image: -ms-linear-gradient(top, @startColor 0%, @middleColor1 50%, @middleColor2 51%, @endColor 100%); /* IE 10+ */
  background-image: linear-gradient(top, @startColor 0%, @middleColor1 50%, @middleColor2 51%, @endColor 100%);
}

.gradient-v (@startColor: #EEE, @endColor: #FFF) {
  background-color: mix(@startColor, @endColor, 60%);
  background-image: -webkit-gradient(linear, left center, right center, from(@startColor), to(@endColor));
  background-image: -webkit-linear-gradient(left, @startColor, @endColor);
  background-image: -moz-linear-gradient(left, @startColor, @endColor);
  background-image: -o-linear-gradient(left, @startColor, @endColor);
  background-image: -ms-linear-gradient(left, @startColor, @endColor); /* IE 10+ */
  background-image: linear-gradient(left, @startColor, @endColor);
  background-repeat: repeat-x;
  filter: e(%("progid:DXImageTransform.Microsoft.gradient(GradientType=1, StartColorStr='%d', EndColorStr='%d')", @startColor, @endColor));
}

.gradient-v3colors (@startColor: #00b3ee, @middleColor: #7a43b6, @colorStop: 50%, @endColor: #c3325f) {
  background-color: mix(@middleColor, @endColor, 80%);
  background-image: -webkit-gradient(linear, 0 0, 0 100%, from(@startColor), color-stop(@colorStop, @middleColor), to(@endColor));
  background-image: -webkit-linear-gradient(@startColor, @middleColor @colorStop, @endColor);
  background-image: -moz-linear-gradient(top, @startColor, @middleColor @colorStop, @endColor);
  background-image: -ms-linear-gradient(@startColor, @middleColor @colorStop, @endColor); /* IE 10+ */
  background-image: -o-linear-gradient(@startColor, @middleColor @colorStop, @endColor);
  background-image: linear-gradient(@startColor, @middleColor @colorStop, @endColor);
  background-repeat: no-repeat;
  filter: e(%("progid:DXImageTransform.Microsoft.gradient(GradientType=0, startColorstr='%d', endColorstr='%d')", @startColor, @endColor));
}

.gradient-radial (@innerColor: #EEE, @outerColor: #FFF) {
  background-color: @outerColor;
  background-image: -webkit-gradient(radial, 50% 50%, 200, 50% 50%, 20, from(@outerColor), to(@innerColor));
  background-image: -webkit-radial-gradient(50% 50%, @innerColor, @outerColor);
  background-image: -moz-radial-gradient(50% 50%, @innerColor, @outerColor);
  background-image: -o-radial-gradient(50% 50%, @innerColor, @outerColor);
  background-image: -ms-radial-gradient(50% 50%, @innerColor, @outerColor); /* IE 10+ */
  background-image: radial-gradient(50% 50%, @innerColor, @outerColor);
  background-repeat: no-repeat;
}

.gradient-direction (@startColor: #555, @endColor: #333, @degrees: 45) {
  background: @endColor;
  background-image: -webkit-gradient(linear, ~"@{degrees}deg", from(@startColor), to(@endColor));
  background-image: -webkit-linear-gradient(~"@{degrees}deg", @startColor, @endColor);
  background-image: -moz-linear-gradient(~"@{degrees}deg", @startColor, @endColor);
  background-image: -o-linear-gradient(~"@{degrees}deg", @startColor, @endColor);
  background-image: -ms-linear-gradient(~"@{degrees}deg", @startColor, @endColor); /* IE 10+ */
  background-image: linear-gradient(~"@{degrees}deg", @startColor, @endColor);
}

.background-clip (@type: border) when (@type = border), (@type = padding), (@type = content) { /* ( border | padding | content ) - ! value must be without "-box" ! */
  -webkit-background-clip: ~"@{type}-box";
     -moz-background-clip: @type;
          background-clip: ~"@{type}-box";
}

.background-size (@value) {
  -webkit-background-size: @value;
     -moz-background-size: @value;
          background-size: @value;
}


/* CSS3 Borders
========================== */

.box-shadow (@values: "1px 1px 2px rgba(0, 0, 0, .5), 0 0 4px #fff, inset 1px 3px 2px #000") { /* for multi-values */
  -webkit-box-shadow: e(@values);
     -moz-box-shadow: e(@values);
          box-shadow: e(@values);
}

.box-shadow (in, @values) {
  -webkit-box-shadow: inset @values;
     -moz-box-shadow: inset @values;
          box-shadow: inset @values;
}

.box-shadow (out, @values) {
  -webkit-box-shadow: @values;
     -moz-box-shadow: @values;
          box-shadow: @values;
}

.border-image (@source: none, @slice: 100%, @width: 1, @outset: 0, @repeat: stretch) { /* repeat: stretch | repeat | round */
  -webkit-border-image: @arguments;
     -moz-border-image: @arguments;
       -o-border-image: @arguments;
          border-image: @arguments;
}

.rounded (@radius: 2px) {
  -webkit-border-radius: @radius;
     -moz-border-radius: @radius;
          border-radius: @radius;
}

.box-sizing (@type: border-box) { /* ( content-box | border-box | inherit ) */
  -webkit-box-sizing: @type;
     -moz-box-sizing: @type;
          box-sizing: @type;
}

.tab-size (@value: 8) {
  -moz-tab-size: @value; /* Firefox 4+ */
    -o-tab-size: @value; /* Opera 10.60+ */
       tab-size: @value;
}


/* CSS3 2D Transforms
========================== */

.rotate (@degrees: 5){
  -webkit-transform: rotate(~"@{degrees}deg");
     -moz-transform: rotate(~"@{degrees}deg");
      -ms-transform: rotate(~"@{degrees}deg");
       -o-transform: rotate(~"@{degrees}deg");
          transform: rotate(~"@{degrees}deg");
}

.scale (@ratio: 1.5){
  -webkit-transform: scale(@ratio);
     -moz-transform: scale(@ratio);
      -ms-transform: scale(@ratio);
       -o-transform: scale(@ratio);
          transform: scale(@ratio);
}

.translate (@x:0, @y:0) {
  -webkit-transform: translate(@x * 1px, @y * 1px);
     -moz-transform: translate(@x * 1px, @y * 1px);
      -ms-transform: translate(@x * 1px, @y * 1px);
       -o-transform: translate(@x * 1px, @y * 1px);
          transform: translate(@x * 1px, @y * 1px);
}

.skew (@degrees-x: 20, @degrees-y: 20) {
-webkit-transform: skew(~"@{degrees-x}deg", ~"@{degrees-y}deg");
   -moz-transform: skew(~"@{degrees-x}deg", ~"@{degrees-y}deg");
    -ms-transform: skew(~"@{degrees-x}deg", ~"@{degrees-y}deg");
     -o-transform: skew(~"@{degrees-x}deg", ~"@{degrees-y}deg");
        transform: skew(~"@{degrees-x}deg", ~"@{degrees-y}deg");
}

.matrix (@rotate: 0.866, @scale: 0.5, @translate: -0.5, @skew: 0.866, @x: 0, @y: 0) {
  -webkit-transform: matrix(@rotate, @scale, @translate, @skew, @x, @y);
     -moz-transform: matrix(@rotate, @scale, @translate, @skew, @x, @y);
      -ms-transform: matrix(@rotate, @scale, @translate, @skew, @x, @y);
       -o-transform: matrix(@rotate, @scale, @translate, @skew, @x, @y);
          transform: matrix(@rotate, @scale, @translate, @skew, @x, @y);
}


/* CSS3 3D Transforms
========================== */

.rotate3d (x, @degrees: 120) {
  -webkit-transform: e(%('rotateX(%d)', ~"@{degrees}deg"));
     -moz-transform: e(%('rotateX(%d)', ~"@{degrees}deg"));
      -ms-transform: e(%('rotateX(%d)', ~"@{degrees}deg"));
          transform: e(%('rotateX(%d)', ~"@{degrees}deg"));
}

.rotate3d (y, @degrees: 10) {
  -webkit-transform: e(%('rotateY(%d)', ~"@{degrees}deg"));
     -moz-transform: e(%('rotateY(%d)', ~"@{degrees}deg"));
      -ms-transform: e(%('rotateY(%d)', ~"@{degrees}deg"));
          transform: e(%('rotateY(%d)', ~"@{degrees}deg"));
}

.translate3d (@x: 0, @y: 0, @z: 0) {
  -webkit-transform: translate3d(@x, @y, @z);
     -moz-transform: translate3d(@x, @y, @z);
      -ms-transform: translate3d(@x, @y, @z); /* IE 10+ */
       -o-transform: translate3d(@x, @y, @z);
          transform: translate3d(@x, @y, @z);
}

.perspective (@value: none, @unit: px) {
  -webkit-perspective: @value;
     -moz-perspective: ~"@{value}@{unit}";
      -ms-perspective: @value; /* IE 10+ */
          perspective: @value;
}


/* CSS3 (2D & 3D) Pref.
========================== */

.transform-origin (@x: 50%, @y: 50%, @z: 0) {
  -webkit-transform-origin: @arguments;
     -moz-transform-origin: @arguments;
      -ms-transform-origin: @arguments; /* IE 10+ */
       -o-transform-origin: @arguments;
          transform-origin: @arguments;
}

.transform-style (@value: flat) { /* flat | preserve-3d */
  -webkit-transform-style: @value;   
     -moz-transform-style: @value;
      -ms-transform-style: @value; /* IE 10+ */
          transform-style: @value; 
}


/* CSS3 Transitions
========================== */

.transition (@property: property, @duration: 0.2s, @timing: ease-out, @delay: 0) {
  -webkit-transition: @arguments;
     -moz-transition: @property @duration @timing ~"@{delay}s";
      -ms-transition: @arguments; /* IE 10+ */
       -o-transition: @arguments; /* Opera 10.5+ */
          transition: @arguments;
}


/* CSS3 Animations
========================== */

.animate (@name: none, @duration: 2s, @timing: ease, @delay: 0, @iteration-count: 1, @direction: normal, @state: running) {
  -webkit-animation: @name @duration @timing @delay @iteration-count @direction;
     -moz-animation: @name @duration @timing ~"@{delay}s" @iteration-count @direction;
      -ms-animation: @name @duration @timing @delay @iteration-count @direction; /* IE 10+ */
          animation: @name @duration @timing @delay @iteration-count @direction;

  -webkit-animation-play-state: @state;
     -moz-animation-play-state: @state;
      -ms-animation-play-state: @state; /* IE 10+ */
          animation-play-state: @state;
}


/* CSS3 Multiple Columns
========================== */

.columns (@columnWidth-Count: auto auto, @columnGap: normal, @columnRule: medium none black) {
  -webkit-columns: @columnWidth-Count;
  -webkit-column-gap: @columnGap;
  -webkit-column-rule: @columnRule;

  -moz-columns: @columnWidth-Count;
  -moz-column-gap: @columnGap;
  -moz-column-rule: @columnRule;

  -ms-column-width: @columnWidth-Count;
  -ms-column-gap: @columnGap;
  -ms-column-rule: @columnRule;

  columns: @columnWidth-Count;
  column-gap: @columnGap;
  column-rule: @columnRule;
}


/* CSS Misc
========================== */

.opacity (@opacity: 0.5) when (isnumber(@opacity)), (@opacity >= 0), (@opacity =< 1) {
  zoom: 1;
  opacity: @opacity;
  filter: e(%("alpha(opacity=%d)", @opacity*100));
}

.font (@size: 40, @line-height: 1.5, @weight: normal) {
  font-size: @size * 1px /* / 16 * 1em*/;
  line-height: @line-height /* * 1px / 16 * 1em*/;
  font-weight: @weight;
}

.size (@width: 20, @height: 20) {
  width: @width * 1px;
  height: @height * 1px;
}

.square (@value: 100) {
  .size(@value, @value);
}

.clearfix () {
  *zoom: 1;
  &:before, &:after {
    content: "";
    display: table;
  }
  &:after {
    clear: both;
  }
}